name: Manual Build Rule [cardpay-reward-programs]

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up env
        env:
          INPUT_ENVIRONMENT: staging
        run: |
          if [ "$INPUT_ENVIRONMENT" = "staging" ]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.STAGING_REWARDS_ECR_WRITER_AWS_ACCESS_KEY}}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_REWARDS_ECR_WRITER_AWS_ACCESS_SECRET }}" >> $GITHUB_ENV
          elif [ "$INPUT_ENVIRONMENT" = "production" ]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.STAGING_REWARDS_ECR_WRITER_AWS_ACCESS_KEY}}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_REWARDS_ECR_WRITER_AWS_ACCESS_SECRET }}" >> $GITHUB_ENV
          else
            echo "unrecognized environment"
            exit 1;
          fi
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, tag, and push image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: flat_payment
  #         IMAGE_TAG: flat_payment
  #       run: |
  #         docker build --build-arg rule=FlatPayment -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #         echo "hi"

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: Deployment environment
#         required: false
#         default: staging
#       rule:
#         description: Rule name
#         required: true
#         default: FlatPayment
